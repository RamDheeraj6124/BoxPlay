{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91961\\\\Desktop\\\\Group38_FDFED_PROJECT\\\\fedproject\\\\my-react-app\\\\src\\\\Admin\\\\AddLocation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"./AddLocation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddLocation = () => {\n  _s();\n  const [states, setStates] = useState([]);\n  const [cities, setCities] = useState([]);\n  const effectRan = useRef(false);\n  useEffect(() => {\n    const getstates = async () => {\n      try {\n        const res = await fetch(\"http://localhost:5000/admin/getstateslist\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const data = await res.json();\n        setStates(data.states);\n      } catch (err) {\n        console.log(\"Error fetching locations:\", err);\n      }\n    };\n    const getcities = async () => {\n      try {\n        const res = await fetch(\"http://localhost:5000/admin/getcitieslist\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const data = await res.json();\n        setStates(data.states);\n      } catch (err) {\n        console.log(\"Error fetching locations:\", err);\n      }\n    };\n    if (!effectRan.current) {\n      getstates();\n      getcities();\n      effectRan.current = true;\n    }\n    return () => {\n      effectRan.current = true; // Cleanup\n    };\n  }, []);\n  const addToStates = async e => {\n    e.preventDefault();\n    const state = e.target.state.value;\n    try {\n      const res = await fetch(\"http://localhost:5000/admin/addstate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          state\n        })\n      });\n      if (res.status === 200) {\n        alert(\"State added successfully\");\n        window.location.reload();\n      }\n    } catch (err) {\n      console.log(\"Error adding state:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"al-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"al-title\",\n      children: \"Add State\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"al-form\",\n      onSubmit: addToStates,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"al-state\",\n        children: \"State:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"al-state\",\n        name: \"state\",\n        placeholder: \"Enter the state name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        id: \"al-submit-button\",\n        children: \"Add State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addToCities,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"al-city\",\n        children: \"City:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"al-city\",\n        name: \"city\",\n        placeholder: \"Enter the city name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        id: \"al-submit-button\",\n        children: \"Add City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"al-existing-title\",\n      children: \"Existing States\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), states.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"al-list\",\n      children: states.map((state, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        id: `al-location-${index}`,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          id: `al-state-name-${index}`,\n          children: [\"State: \", state.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"al-no-locations-message\",\n      children: \"No States have been added yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(AddLocation, \"sJsvNYETYWg25gLGQHEhx3nVjvM=\");\n_c = AddLocation;\nexport default AddLocation;\nvar _c;\n$RefreshReg$(_c, \"AddLocation\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","AddLocation","_s","states","setStates","cities","setCities","effectRan","getstates","res","fetch","method","headers","data","json","err","console","log","getcities","current","addToStates","e","preventDefault","state","target","value","body","JSON","stringify","status","alert","window","location","reload","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","name","placeholder","required","addToCities","length","map","index","_c","$RefreshReg$"],"sources":["C:/Users/91961/Desktop/Group38_FDFED_PROJECT/fedproject/my-react-app/src/Admin/AddLocation.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./AddLocation.css\";\r\n\r\nconst AddLocation = () => {\r\n  const [states, setStates] = useState([]); \r\n  const [cities, setCities] = useState([]); \r\n  const effectRan = useRef(false);\r\n\r\n  useEffect(() => {\r\n    const getstates = async () => {\r\n      try {\r\n        const res = await fetch(\"http://localhost:5000/admin/getstateslist\", {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        const data = await res.json();\r\n        setStates(data.states);\r\n        \r\n      } catch (err) {\r\n        console.log(\"Error fetching locations:\", err);\r\n      }\r\n    };\r\n    const getcities = async () => {\r\n      try {\r\n        const res = await fetch(\"http://localhost:5000/admin/getcitieslist\", {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        const data = await res.json();\r\n        setStates(data.states);\r\n        \r\n      } catch (err) {\r\n        console.log(\"Error fetching locations:\", err);\r\n      }\r\n    };\r\n\r\n    if (!effectRan.current) {\r\n      getstates();\r\n      getcities();\r\n      effectRan.current = true;\r\n    }\r\n\r\n    return () => {\r\n      effectRan.current = true; // Cleanup\r\n    };\r\n  }, []);\r\nconst addToStates = async (e) => {\r\n    e.preventDefault();\r\n    const state = e.target.state.value;\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/admin/addstate\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ state }),\r\n      })\r\n      if(res.status === 200){\r\n        alert(\"State added successfully\");\r\n        window.location.reload();\r\n      }}\r\n      catch (err) {\r\n      console.log(\"Error adding state:\", err);\r\n    }\r\n  };\r\n          \r\n\r\n\r\n  return (\r\n    <div id=\"al-container\">\r\n      <h1 id=\"al-title\">Add State</h1>\r\n      <form id=\"al-form\" onSubmit={addToStates}>\r\n\r\n        <label htmlFor=\"al-state\">State:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"al-state\"\r\n          name=\"state\"\r\n          placeholder=\"Enter the state name\"\r\n          required\r\n        />\r\n\r\n        <button type=\"submit\" id=\"al-submit-button\">Add State</button>\r\n      </form>\r\n    <form onSubmit={addToCities}>\r\n      <label htmlFor=\"al-city\">City:</label>\r\n      <input\r\n      type=\"text\"\r\n      id=\"al-city\"\r\n      name=\"city\"\r\n      placeholder=\"Enter the city name\"\r\n      required\r\n      />\r\n      <button type=\"submit\" id=\"al-submit-button\">Add City</button>\r\n      </form>      \r\n\r\n      <h1 id=\"al-existing-title\">Existing States</h1>\r\n      {states.length > 0 ? (\r\n        <ul id=\"al-list\">\r\n          {states.map((state, index) => (\r\n            <li key={index} id={`al-location-${index}`}>\r\n              <h3 id={`al-state-name-${index}`}>State: {state.name}</h3>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p id=\"al-no-locations-message\">No States have been added yet</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddLocation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}