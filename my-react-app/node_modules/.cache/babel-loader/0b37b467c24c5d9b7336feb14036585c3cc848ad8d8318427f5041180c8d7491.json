{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91961\\\\Desktop\\\\fprac3\\\\fedproject\\\\my-react-app\\\\src\\\\Admin\\\\Queries.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AdminDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QueryMode = () => {\n  _s();\n  const [queries, setQueries] = useState(null);\n  const [username, setUsername] = useState(null);\n  const [selectedQuery, setSelectedQuery] = useState(null);\n  const [isQueryModalOpen, setIsQueryModalOpen] = useState(false);\n  const [replyMessage, setReplyMessage] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const checkSession = async () => {\n      const response = await fetch('http://localhost:5000/admin/checksession', {\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setUsername(data.username);\n        const queries = data.details.queries.filter(q => q.replied === false);\n        setQueries(queries);\n      } else {\n        navigate('/login');\n        setUsername(null);\n      }\n    };\n    checkSession();\n  }, [navigate]);\n  const openQueryModal = query => {\n    setSelectedQuery(query);\n    setReplyMessage(`Replying to your query, ${query.message}`);\n    setIsQueryModalOpen(true);\n  };\n  const closeQueryModal = () => {\n    setIsQueryModalOpen(false);\n    setSelectedQuery(null);\n    setReplyMessage('');\n  };\n  const sendReply = async (e, queryId) => {\n    e.preventDefault();\n    const response = await fetch(`http://localhost:5000/admin/sendreply`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        queryId,\n        reply: replyMessage\n      })\n    });\n    if (response.ok) {\n      alert('Reply sent successfully');\n      closeQueryModal();\n    } else {\n      alert('Failed to send reply');\n    }\n  };\n  if (!username) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-message\",\n      children: \"You must be logged in as an admin to view this page.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"ad-dashboard-title\",\n      children: [\"Welcome, \", username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"ad-users-title\",\n      children: \"User Queries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), queries && /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"ad-users-list\",\n      children: queries.map(query => /*#__PURE__*/_jsxDEV(\"li\", {\n        id: `ad-user-${query._id}`,\n        onClick: () => openQueryModal(query),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Username: \", query.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", query.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Mobile: \", query.mobile]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Message: \", query.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this)]\n      }, query._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), isQueryModalOpen && selectedQuery && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"query-modal\",\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: closeQueryModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Send Reply to Query\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => sendReply(e, selectedQuery._id),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"query-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"To: \", selectedQuery.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Reg: Your Query Sent to us\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"reply\",\n              value: replyMessage,\n              onChange: e => setReplyMessage(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"submit-button\",\n              children: \"Send Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(QueryMode, \"TfiOMqej8J+72NqjAMI7XROYblM=\", false, function () {\n  return [useNavigate];\n});\n_c = QueryMode;\nexport default QueryMode;\nvar _c;\n$RefreshReg$(_c, \"QueryMode\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","QueryMode","_s","queries","setQueries","username","setUsername","selectedQuery","setSelectedQuery","isQueryModalOpen","setIsQueryModalOpen","replyMessage","setReplyMessage","navigate","checkSession","response","fetch","credentials","ok","data","json","details","filter","q","replied","openQueryModal","query","message","closeQueryModal","sendReply","e","queryId","preventDefault","method","headers","body","JSON","stringify","reply","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","map","_id","onClick","name","email","mobile","onSubmit","value","onChange","target","type","_c","$RefreshReg$"],"sources":["C:/Users/91961/Desktop/fprac3/fedproject/my-react-app/src/Admin/Queries.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './AdminDashboard.css';\r\n\r\nconst QueryMode = () => {\r\n    const [queries, setQueries] = useState(null);\r\n    const [username, setUsername] = useState(null);\r\n    const [selectedQuery, setSelectedQuery] = useState(null);\r\n    const [isQueryModalOpen, setIsQueryModalOpen] = useState(false);\r\n    const [replyMessage, setReplyMessage] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const checkSession = async () => {\r\n            const response = await fetch('http://localhost:5000/admin/checksession', {\r\n                credentials: 'include'\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                setUsername(data.username);\r\n                const queries=data.details.queries.filter(q => q.replied===false)\r\n                setQueries(queries);\r\n            } else {\r\n                navigate('/login');\r\n                setUsername(null);\r\n            }\r\n        };\r\n\r\n        checkSession();\r\n    }, [navigate]);\r\n\r\n    const openQueryModal = (query) => {\r\n        setSelectedQuery(query);\r\n        setReplyMessage(`Replying to your query, ${query.message}`);\r\n        setIsQueryModalOpen(true);\r\n    };\r\n\r\n    const closeQueryModal = () => {\r\n        setIsQueryModalOpen(false);\r\n        setSelectedQuery(null);\r\n        setReplyMessage('');\r\n    };\r\n\r\n    const sendReply = async (e, queryId) => {\r\n        e.preventDefault();\r\n\r\n        const response = await fetch(`http://localhost:5000/admin/sendreply`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                queryId,\r\n                reply: replyMessage,\r\n            }),\r\n        });\r\n\r\n        if (response.ok) {\r\n            alert('Reply sent successfully');\r\n            closeQueryModal();\r\n        } else {\r\n            alert('Failed to send reply');\r\n        }\r\n    };\r\n\r\n    if (!username) {\r\n        return <div className=\"login-message\">You must be logged in as an admin to view this page.</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"admin-dashboard\">\r\n            <h1 id=\"ad-dashboard-title\">Welcome, {username}</h1>\r\n\r\n            <h2 id=\"ad-users-title\">User Queries</h2>\r\n            {queries && (\r\n                <ul id=\"ad-users-list\">\r\n                    {queries.map((query) => (\r\n                        <li\r\n                            key={query._id}\r\n                            id={`ad-user-${query._id}`}\r\n                            onClick={() => openQueryModal(query)}\r\n                        >\r\n                            <p>Username: {query.name}</p>\r\n                            <p>Email: {query.email}</p>\r\n                            <p>Mobile: {query.mobile}</p>\r\n                            <p>Message: {query.message}</p>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n            {isQueryModalOpen && selectedQuery && (\r\n                <div id=\"query-modal\" className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <span className=\"close\" onClick={closeQueryModal}>\r\n                            &times;\r\n                        </span>\r\n                        <h2>Send Reply to Query</h2>\r\n                        <form onSubmit={(e) => sendReply(e, selectedQuery._id)}>\r\n                            <div className=\"query-details\">\r\n                                <label>To: {selectedQuery.email}</label>\r\n                                <label>Reg: Your Query Sent to us</label>\r\n                                <label>Reply</label>\r\n                                <textarea\r\n                                    name=\"reply\"\r\n                                    value={replyMessage}\r\n                                    onChange={(e) => setReplyMessage(e.target.value)}\r\n                                ></textarea>\r\n                            </div>\r\n                            <div className=\"form-actions\">\r\n                                <button type=\"submit\" className=\"submit-button\">\r\n                                    Send Reply\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QueryMode;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}