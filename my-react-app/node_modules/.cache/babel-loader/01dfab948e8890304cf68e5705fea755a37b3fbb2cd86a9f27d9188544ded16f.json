{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91961\\\\Desktop\\\\Group38_FDFED_PROJECT\\\\fedproject\\\\my-react-app\\\\src\\\\Admin\\\\AddLocation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./AddLocation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddLocation = () => {\n  _s();\n  const [states, setStates] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [selectedState, setSelectedState] = useState(\"\");\n  useEffect(() => {\n    const fetchStates = async () => {\n      try {\n        const res = await fetch(\"http://localhost:5000/admin/getstateslist\");\n        const data = await res.json();\n        setStates(data.states);\n      } catch (err) {\n        console.error(\"Error fetching states:\", err);\n      }\n    };\n    const fetchCities = async () => {\n      try {\n        const res = await fetch(\"http://localhost:5000/admin/getcitieslist\");\n        const data = await res.json();\n        setCities(data.cities);\n      } catch (err) {\n        console.error(\"Error fetching cities:\", err);\n      }\n    };\n    fetchStates();\n    fetchCities();\n  }, []);\n  const addToStates = async e => {\n    e.preventDefault();\n    const stateName = e.target.state.value.trim();\n    if (!stateName) {\n      alert(\"State name cannot be empty.\");\n      return;\n    }\n    try {\n      const res = await fetch(\"http://localhost:5000/admin/addstate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: stateName\n        })\n      });\n      if (res.ok) {\n        alert(\"State added successfully\");\n        window.location.reload();\n      } else {\n        const error = await res.json();\n        alert(error.message);\n      }\n    } catch (err) {\n      console.error(\"Error adding state:\", err);\n    }\n  };\n  const addToCities = async e => {\n    e.preventDefault();\n    const cityName = e.target.city.value.trim();\n    if (!selectedState) {\n      alert(\"Please select a state.\");\n      return;\n    }\n    try {\n      const res = await fetch(\"http://localhost:5000/admin/addcity\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: cityName,\n          state: selectedState\n        })\n      });\n      if (res.ok) {\n        alert(\"City added successfully\");\n        window.location.reload();\n      } else {\n        const error = await res.json();\n        alert(error.message);\n      }\n    } catch (err) {\n      console.error(\"Error adding city:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"al-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add State\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addToStates,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"State:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"state\",\n        placeholder: \"Enter state name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add State\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add City\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addToCities,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"City:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"city\",\n        placeholder: \"Enter city name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select State:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedState,\n        onChange: e => setSelectedState(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), states.map(state => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: state._id,\n          children: state.name\n        }, state._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Existing Locations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: states.map(state => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: state.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: cities.filter(city => city.state._id === state._id).map(city => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: city.name\n          }, city._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, state._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(AddLocation, \"1FdcxxGEPeCrPI92KhI2NB6v1kc=\");\n_c = AddLocation;\nexport default AddLocation;\nvar _c;\n$RefreshReg$(_c, \"AddLocation\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AddLocation","_s","states","setStates","cities","setCities","selectedState","setSelectedState","fetchStates","res","fetch","data","json","err","console","error","fetchCities","addToStates","e","preventDefault","stateName","target","state","value","trim","alert","method","headers","body","JSON","stringify","name","ok","window","location","reload","message","addToCities","cityName","city","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","required","onChange","map","_id","filter","_c","$RefreshReg$"],"sources":["C:/Users/91961/Desktop/Group38_FDFED_PROJECT/fedproject/my-react-app/src/Admin/AddLocation.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./AddLocation.css\";\r\n\r\nconst AddLocation = () => {\r\n  const [states, setStates] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n  const [selectedState, setSelectedState] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchStates = async () => {\r\n      try {\r\n        const res = await fetch(\"http://localhost:5000/admin/getstateslist\");\r\n        const data = await res.json();\r\n        setStates(data.states);\r\n      } catch (err) {\r\n        console.error(\"Error fetching states:\", err);\r\n      }\r\n    };\r\n\r\n    const fetchCities = async () => {\r\n      try {\r\n        const res = await fetch(\"http://localhost:5000/admin/getcitieslist\");\r\n        const data = await res.json();\r\n        setCities(data.cities);\r\n      } catch (err) {\r\n        console.error(\"Error fetching cities:\", err);\r\n      }\r\n    };\r\n\r\n    fetchStates();\r\n    fetchCities();\r\n  }, []);\r\n\r\n  const addToStates = async (e) => {\r\n    e.preventDefault();\r\n    const stateName = e.target.state.value.trim();\r\n\r\n    if (!stateName) {\r\n      alert(\"State name cannot be empty.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/admin/addstate\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ name: stateName })\r\n      });\r\n\r\n      if (res.ok) {\r\n        alert(\"State added successfully\");\r\n        window.location.reload();\r\n      } else {\r\n        const error = await res.json();\r\n        alert(error.message);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error adding state:\", err);\r\n    }\r\n  };\r\n\r\n  const addToCities = async (e) => {\r\n    e.preventDefault();\r\n    const cityName = e.target.city.value.trim();\r\n\r\n    if (!selectedState) {\r\n      alert(\"Please select a state.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/admin/addcity\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ name: cityName, state: selectedState })\r\n      });\r\n\r\n      if (res.ok) {\r\n        alert(\"City added successfully\");\r\n        window.location.reload();\r\n      } else {\r\n        const error = await res.json();\r\n        alert(error.message);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error adding city:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"al-container\">\r\n      <h1>Add State</h1>\r\n      <form onSubmit={addToStates}>\r\n        <label>State:</label>\r\n        <input type=\"text\" name=\"state\" placeholder=\"Enter state name\" required />\r\n        <button type=\"submit\">Add State</button>\r\n      </form>\r\n\r\n      <h1>Add City</h1>\r\n      <form onSubmit={addToCities}>\r\n        <label>City:</label>\r\n        <input type=\"text\" name=\"city\" placeholder=\"Enter city name\" required />\r\n\r\n        <label>Select State:</label>\r\n        <select value={selectedState} onChange={(e) => setSelectedState(e.target.value)} required>\r\n          <option value=\"\">Select State</option>\r\n          {states.map((state) => (\r\n            <option key={state._id} value={state._id}>\r\n              {state.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button type=\"submit\">Add City</button>\r\n      </form>\r\n\r\n      <h1>Existing Locations</h1>\r\n      <ul>\r\n        {states.map((state) => (\r\n          <li key={state._id}>\r\n            <h3>{state.name}</h3>\r\n            <ul>\r\n              {cities\r\n                .filter((city) => city.state._id === state._id)\r\n                .map((city) => (\r\n                  <li key={city._id}>{city.name}</li>\r\n                ))}\r\n            </ul>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddLocation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}