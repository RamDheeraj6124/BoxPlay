{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91961\\\\Desktop\\\\Group38_FDFED_PROJECT\\\\fedproject\\\\my-react-app\\\\src\\\\Shop\\\\ShopDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ShopDashboard.css';\nimport { Pie } from \"react-chartjs-2\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst ShopDashboard = () => {\n  _s();\n  const effectRan = useRef(false);\n  const [state, setState] = useState({});\n  const [daysPerWeek, setDaysPerWeek] = useState(0);\n  const [daysArray, setDaysArray] = useState([]);\n  const [timesArray, setTimesArray] = useState([]);\n  const [grounds, setGrounds] = useState([]);\n  const [groundRevenue, setGroundRevenue] = useState([]);\n  const navigate = useNavigate();\n  const [sportlist, getSportsList] = useState([]);\n  const effectRan1 = useRef(false);\n  useEffect(() => {\n    const getSports = async () => {\n      try {\n        const res = await fetch(\"http://localhost:5000/admin/getsportslist\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const data = await res.json();\n        getSportsList(data.sportslist);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    if (!effectRan.current) {\n      getSports();\n      effectRan1.current = true;\n    }\n    return () => {\n      effectRan1.current = true; // Cleanup\n    };\n  }, []);\n  useEffect(() => {\n    if (effectRan.current === false) {\n      const checkShopSession = async () => {\n        try {\n          const response = await fetch('http://localhost:5000/shop/checkshopsession', {\n            credentials: 'include'\n          });\n          if (!response.ok) {\n            navigate('/shoplogin');\n          } else {\n            const data = await response.json();\n            console.log('Shop Data:', data);\n            setState(data.shop);\n            setGrounds(data.shop.availablesports || []);\n          }\n          const revenueresponse = await fetch('http://localhost:5000/shop/checkrevenue', {\n            method: 'GET',\n            credentials: 'include'\n          });\n          if (revenueresponse.ok) {\n            const revenueData = await revenueresponse.json(); // Correct variable used\n            console.log(revenueData);\n            setGroundRevenue(revenueData.groundRevenues);\n          } else {\n            throw new Error(\"Expected JSON, but received: \");\n          }\n        } catch (error) {\n          console.error('Error fetching shop session:', error);\n          alert('An error occurred while fetching shop session.');\n        }\n      };\n      checkShopSession();\n      effectRan.current = true;\n    }\n    return () => {\n      effectRan.current = false; // Cleanup\n    };\n  }, [navigate]);\n  const updatesubmit = async e => {\n    e.preventDefault();\n    const {\n      shopname,\n      address\n    } = e.target.elements;\n    try {\n      const response = await fetch('http://localhost:5000/shop/updateshop', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          shopname: shopname.value,\n          address: address.value\n        }),\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setState(prevState => ({\n          ...prevState,\n          shopname: data.updatedShop.shopname,\n          address: data.updatedShop.address\n        }));\n        alert('Shop details updated successfully');\n      } else {\n        const error = await response.json();\n        alert(`Update failed: ${error.msg}`);\n      }\n    } catch (error) {\n      console.error('Error updating shop details:', error);\n      alert('An error occurred while updating shop details.');\n    }\n  };\n  const handleDaysPerWeekChange = e => {\n    let value = parseInt(e.target.value, 10);\n    if (isNaN(value) || value < 0) {\n      value = 0;\n    }\n    if (value > 7) {\n      value = 7;\n    }\n    setDaysPerWeek(value);\n    setDaysArray(Array(value).fill(''));\n    setTimesArray(Array(value).fill({\n      start: '',\n      end: ''\n    }));\n  };\n  const handleDayChange = (index, value) => {\n    const updatedDays = [...daysArray];\n    updatedDays[index] = value;\n    setDaysArray(updatedDays);\n  };\n  const handleTimeChange = (index, type, value) => {\n    const updatedTimes = [...timesArray];\n    updatedTimes[index] = {\n      ...updatedTimes[index],\n      [type]: value\n    };\n    setTimesArray(updatedTimes);\n  };\n  const generateDayOptions = () => {\n    const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n    return days.map((day, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: day,\n      children: day\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this));\n  };\n  const addGround = async e => {\n    e.preventDefault();\n    const form = e.target;\n    const formData = new FormData(form);\n    const availability = daysArray.map((day, index) => ({\n      day,\n      times: [{\n        start: timesArray[index].start,\n        end: timesArray[index].end\n      }]\n    }));\n    formData.append('availability', JSON.stringify(availability));\n    try {\n      const response = await fetch('http://localhost:5000/shop/addground', {\n        method: 'POST',\n        body: formData,\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const updatedData = await response.json();\n        console.log('Updated Grounds Data:', updatedData);\n        setGrounds(prevGrounds => [...prevGrounds, updatedData.newGround]);\n        alert('Ground added successfully!');\n\n        // Reset form and state\n        form.reset();\n        setDaysPerWeek(0);\n        setDaysArray([]);\n        setTimesArray([]);\n      } else {\n        const error = await response.json();\n        alert(`Error adding ground: ${error.msg}`);\n      }\n    } catch (error) {\n      console.error('Error adding ground:', error);\n      alert('An error occurred while adding the ground.');\n    }\n  };\n  const applyingforverification = async groundname => {\n    try {\n      const response = await fetch('http://localhost:5000/shop/applyforverification', {\n        method: 'POST',\n        body: JSON.stringify({\n          groundname\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      if (response.ok) {\n        alert('Applied Successfully');\n\n        // Update the specific ground's status in the grounds array\n        setGrounds(prevGrounds => prevGrounds.map(ground => ground.groundname === groundname ? {\n          ...ground,\n          appliedforverification: true\n        } : ground));\n      } else {\n        const error = await response.json();\n        alert(`Failed to apply for verification: ${error.msg}`);\n      }\n    } catch (err) {\n      console.log(err);\n      alert('An error occurred while applying for verification.');\n    }\n  };\n  const chartData = {\n    labels: groundRevenue.map(sport => sport.groundName),\n    datasets: [{\n      label: 'Ground Revenue',\n      data: groundRevenue.map(sport => sport.groundFee),\n      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40']\n    }]\n  };\n  const shoplogout = async () => {\n    await fetch('http://localhost:5000/shop/logout', {\n      credentials: 'include',\n      method: 'POST'\n    });\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sd-shop-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"sd-title\",\n      children: \"Shop Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shophigh\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"sd-email\",\n        children: [\"Email: \", state.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"sd-owner\",\n        children: [\"Owner Name: \", state.owner]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"logout\",\n        onClick: shoplogout,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-sign-out-alt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), \" Logout\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sd-update-form\",\n      onSubmit: updatesubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"shopname\",\n        children: \"Shop Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"text\",\n        name: \"shopname\",\n        id: \"shopname\",\n        placeholder: \"Shop Name\",\n        defaultValue: state.shopname,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"address\",\n        children: \"Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"text\",\n        name: \"address\",\n        id: \"address\",\n        placeholder: \"Address\",\n        defaultValue: state.address,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sd-button\",\n        type: \"submit\",\n        children: \"Update Shop Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sd-add-ground-form\",\n      onSubmit: addGround,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"sd-subtitle\",\n        children: \"Add Ground\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"selectsport\",\n        children: \"Select a sport:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"sd-select\",\n        name: \"selectsport\",\n        id: \"select Sport\",\n        children: sportlist.length > 0 ? sportlist.map(sport => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: sport.name,\n          children: sport.name\n        }, sport.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No sports\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"groundname\",\n        children: \"Ground Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"text\",\n        name: \"groundname\",\n        id: \"groundname\",\n        placeholder: \"Ground Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"priceperhour\",\n        children: \"Price Per Hour:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"number\",\n        name: \"priceperhour\",\n        id: \"priceperhour\",\n        placeholder: \"Price Per Hour\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"maxplayers\",\n        children: \"Maximum Number of Players:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"number\",\n        name: \"maxplayers\",\n        id: \"maxplayers\",\n        placeholder: \"Maximum Number Of Players\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"groundLength\",\n        children: \"Ground Length (meters):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"number\",\n        name: \"groundLength\",\n        id: \"groundLength\",\n        placeholder: \"Ground Length (meters)\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"groundwidth\",\n        children: \"Ground Width (meters):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"number\",\n        name: \"groundwidth\",\n        id: \"groundwidth\",\n        placeholder: \"Ground Width (meters)\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"facilities\",\n        children: \"Facilities Available:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"text\",\n        name: \"facilities\",\n        id: \"facilities\",\n        placeholder: \"Facilities Available\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"surfaceType\",\n        children: \"Surface Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"sd-select\",\n        name: \"surfaceType\",\n        id: \"surfaceType\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Grass\",\n          children: \"Grass\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Turf\",\n          children: \"Turf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Clay\",\n          children: \"Clay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Hard\",\n          children: \"Hard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Synthetic\",\n          children: \"Synthetic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"image\",\n        children: \"Upload Ground Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"file\",\n        name: \"image\",\n        id: \"image\",\n        accept: \"image/*\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"sd-label\",\n        htmlFor: \"daysperweek\",\n        children: \"Days Available Per Week:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"sd-input\",\n        type: \"number\",\n        name: \"daysperweek\",\n        id: \"daysperweek\",\n        placeholder: \"Days Per Week\",\n        required: true,\n        value: daysPerWeek,\n        onChange: handleDaysPerWeekChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), Array.from({\n        length: daysPerWeek\n      }).map((_, index) => {\n        var _timesArray$index, _timesArray$index2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sd-day-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"sd-label\",\n            htmlFor: `day-${index}`,\n            children: \"Day:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"sd-select\",\n            name: `day-${index}`,\n            id: `day-${index}`,\n            value: daysArray[index] || '',\n            onChange: e => handleDayChange(index, e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this), generateDayOptions()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"sd-label\",\n            htmlFor: `start-time-${index}`,\n            children: \"Start Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"sd-input\",\n            type: \"time\",\n            name: `start-time-${index}`,\n            id: `start-time-${index}`,\n            value: ((_timesArray$index = timesArray[index]) === null || _timesArray$index === void 0 ? void 0 : _timesArray$index.start) || '',\n            onChange: e => handleTimeChange(index, 'start', e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"sd-label\",\n            htmlFor: `end-time-${index}`,\n            children: \"End Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"sd-input\",\n            type: \"time\",\n            name: `end-time-${index}`,\n            id: `end-time-${index}`,\n            value: ((_timesArray$index2 = timesArray[index]) === null || _timesArray$index2 === void 0 ? void 0 : _timesArray$index2.end) || '',\n            onChange: e => handleTimeChange(index, 'end', e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sd-button\",\n        type: \"submit\",\n        children: \"Add Ground\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sd-pie-chart\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Shop's Revenue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"sd-grounds-list\",\n      children: grounds.map((ground, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"sd-ground-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: ground.groundname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price Per Hour: \", ground.priceperhour]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Max Players: \", ground.maxplayers]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Ground Dimensions: \", ground.grounddimensions.length, \" x \", ground.grounddimensions.width, \" meters\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Facilities: \", ground.facilities.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Surface Type: \", ground.surfacetype]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: ground.getimage || ground.image || 'default-image-path.jpg',\n          alt: ground.groundname,\n          className: \"sd-ground-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", ground.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Verification: \", ground.verify ? 'Verified' : 'Not Verified']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Applied For Verification: \", ground.appliedforverification ? 'Applied' : 'Not Applied']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this), !ground.verify && !ground.appliedforverification && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => applyingforverification(ground.groundname),\n          children: \"Apply for Verification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopDashboard, \"+wVyErvhJNlyshwbd3hPcfDno8M=\", false, function () {\n  return [useNavigate];\n});\n_c = ShopDashboard;\nexport default ShopDashboard;\nvar _c;\n$RefreshReg$(_c, \"ShopDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","useNavigate","jsxDEV","_jsxDEV","register","ShopDashboard","_s","effectRan","state","setState","daysPerWeek","setDaysPerWeek","daysArray","setDaysArray","timesArray","setTimesArray","grounds","setGrounds","groundRevenue","setGroundRevenue","navigate","sportlist","getSportsList","effectRan1","getSports","res","fetch","method","headers","data","json","sportslist","err","console","log","current","checkShopSession","response","credentials","ok","shop","availablesports","revenueresponse","revenueData","groundRevenues","Error","error","alert","updatesubmit","e","preventDefault","shopname","address","target","elements","body","JSON","stringify","value","prevState","updatedShop","msg","handleDaysPerWeekChange","parseInt","isNaN","Array","fill","start","end","handleDayChange","index","updatedDays","handleTimeChange","type","updatedTimes","generateDayOptions","days","map","day","children","fileName","_jsxFileName","lineNumber","columnNumber","addGround","form","formData","FormData","availability","times","append","updatedData","prevGrounds","newGround","reset","applyingforverification","groundname","ground","appliedforverification","chartData","labels","sport","groundName","datasets","label","groundFee","backgroundColor","shoplogout","className","email","owner","onClick","onSubmit","htmlFor","name","id","placeholder","defaultValue","required","length","accept","onChange","from","_","_timesArray$index","_timesArray$index2","disabled","priceperhour","maxplayers","grounddimensions","width","facilities","join","surfacetype","src","getimage","image","alt","status","verify","_c","$RefreshReg$"],"sources":["C:/Users/91961/Desktop/Group38_FDFED_PROJECT/fedproject/my-react-app/src/Shop/ShopDashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './ShopDashboard.css';\r\nimport { Pie } from \"react-chartjs-2\"; \r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js'; \r\nimport { useNavigate } from 'react-router-dom';\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst ShopDashboard = () => {\r\n  const effectRan = useRef(false);\r\n  const [state, setState] = useState({});\r\n  const [daysPerWeek, setDaysPerWeek] = useState(0);\r\n  const [daysArray, setDaysArray] = useState([]);\r\n  const [timesArray, setTimesArray] = useState([]);\r\n  const [grounds, setGrounds] = useState([]);\r\n  const [groundRevenue, setGroundRevenue] = useState([]);\r\n  const navigate = useNavigate();\r\n  const [sportlist, getSportsList] = useState([]);\r\n  const effectRan1 = useRef(false);\r\n\r\n  useEffect(() => {\r\n    const getSports = async () => { \r\n      try { \r\n        const res = await fetch(\"http://localhost:5000/admin/getsportslist\", { \r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        const data = await res.json();\r\n        getSportsList(data.sportslist);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n\r\n    if (!effectRan.current) {\r\n      getSports();\r\n      effectRan1.current = true;\r\n    }\r\n\r\n    return () => {\r\n      effectRan1.current = true; // Cleanup\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (effectRan.current === false) {\r\n        const checkShopSession = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/shop/checkshopsession', {\r\n                    credentials: 'include'\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    navigate('/shoplogin');\r\n                } else {\r\n                    const data = await response.json();\r\n                    console.log('Shop Data:', data);\r\n                    setState(data.shop);\r\n                    setGrounds(data.shop.availablesports || []);\r\n                }\r\n\r\n                const revenueresponse = await fetch('http://localhost:5000/shop/checkrevenue', {\r\n                    method: 'GET',\r\n                    credentials: 'include'\r\n                });\r\n\r\n                if (revenueresponse.ok) {\r\n                    const revenueData = await revenueresponse.json(); // Correct variable used\r\n                    console.log(revenueData); \r\n                    setGroundRevenue(revenueData.groundRevenues);\r\n                } else {\r\n                    throw new Error(\"Expected JSON, but received: \");\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching shop session:', error);\r\n                alert('An error occurred while fetching shop session.');\r\n            }\r\n        };\r\n\r\n        checkShopSession();\r\n        effectRan.current = true;\r\n    }\r\n    return () => {\r\n        effectRan.current = false; // Cleanup\r\n    };\r\n}, [navigate]);\r\n\r\n  const updatesubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { shopname, address } = e.target.elements;\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/shop/updateshop', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          shopname: shopname.value,\r\n          address: address.value\r\n        }),\r\n        credentials: 'include'\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setState(prevState => ({\r\n          ...prevState,\r\n          shopname: data.updatedShop.shopname,\r\n          address: data.updatedShop.address\r\n        }));\r\n        alert('Shop details updated successfully');\r\n      } else {\r\n        const error = await response.json();\r\n        alert(`Update failed: ${error.msg}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating shop details:', error);\r\n      alert('An error occurred while updating shop details.');\r\n    }\r\n  };\r\n\r\n  const handleDaysPerWeekChange = (e) => {\r\n    let value = parseInt(e.target.value, 10);\r\n\r\n    if (isNaN(value) || value < 0) {\r\n      value = 0;\r\n    }\r\n\r\n    if (value > 7) {\r\n      value = 7;\r\n    }\r\n\r\n    setDaysPerWeek(value);\r\n    setDaysArray(Array(value).fill(''));\r\n    setTimesArray(Array(value).fill({ start: '', end: '' }));\r\n  };\r\n\r\n  const handleDayChange = (index, value) => {\r\n    const updatedDays = [...daysArray];\r\n    updatedDays[index] = value;\r\n    setDaysArray(updatedDays);\r\n  };\r\n\r\n  const handleTimeChange = (index, type, value) => {\r\n    const updatedTimes = [...timesArray];\r\n    updatedTimes[index] = { ...updatedTimes[index], [type]: value };\r\n    setTimesArray(updatedTimes);\r\n  };\r\n\r\n  const generateDayOptions = () => {\r\n    const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n    return days.map((day, index) => (\r\n      <option key={index} value={day}>\r\n        {day}\r\n      </option>\r\n    ));\r\n  };\r\n\r\n  const addGround = async (e) => {\r\n    e.preventDefault();\r\n    const form = e.target;\r\n    const formData = new FormData(form);\r\n\r\n    const availability = daysArray.map((day, index) => ({\r\n      day,\r\n      times: [{ start: timesArray[index].start, end: timesArray[index].end }]\r\n    }));\r\n    formData.append('availability', JSON.stringify(availability));\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/shop/addground', {\r\n        method: 'POST',\r\n        body: formData,\r\n        credentials: 'include'\r\n      });\r\n\r\n      if (response.ok) {\r\n        const updatedData = await response.json();\r\n        console.log('Updated Grounds Data:', updatedData);\r\n        setGrounds(prevGrounds => [...prevGrounds, updatedData.newGround]);\r\n        alert('Ground added successfully!');\r\n        \r\n        // Reset form and state\r\n        form.reset();\r\n        setDaysPerWeek(0);\r\n        setDaysArray([]);\r\n        setTimesArray([]);\r\n      } else {\r\n        const error = await response.json();\r\n        alert(`Error adding ground: ${error.msg}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding ground:', error);\r\n      alert('An error occurred while adding the ground.');\r\n    }\r\n  };\r\n\r\n  const applyingforverification = async (groundname) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/shop/applyforverification', {\r\n        method: 'POST',\r\n        body: JSON.stringify({ groundname }),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include'\r\n      });\r\n      \r\n      if (response.ok) {\r\n        alert('Applied Successfully');\r\n  \r\n        // Update the specific ground's status in the grounds array\r\n        setGrounds(prevGrounds => \r\n          prevGrounds.map(ground => \r\n            ground.groundname === groundname \r\n              ? { ...ground, appliedforverification: true } \r\n              : ground\r\n          )\r\n        );\r\n      } else {\r\n        const error = await response.json();\r\n        alert(`Failed to apply for verification: ${error.msg}`);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      alert('An error occurred while applying for verification.');\r\n    }\r\n  };\r\n\r\n  const chartData = {\r\n    labels: groundRevenue.map((sport) => sport.groundName),\r\n    datasets: [{\r\n        label: 'Ground Revenue',\r\n        data: groundRevenue.map((sport) => sport.groundFee),\r\n        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'],\r\n    }],\r\n  };\r\n\r\n  const shoplogout = async () => {\r\n    await fetch('http://localhost:5000/shop/logout', { credentials: 'include', method: 'POST' });\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <div className=\"sd-shop-dashboard\">\r\n      <h1 className=\"sd-title\">Shop Dashboard</h1>\r\n      <div className='shophigh'>\r\n      <h3 className=\"sd-email\">Email: {state.email}</h3>\r\n      <h3 className=\"sd-owner\">Owner Name: {state.owner}</h3>\r\n      <span className=\"logout\" onClick={shoplogout}>\r\n          <i className=\"fas fa-sign-out-alt\"></i> Logout\r\n        </span>\r\n      </div>\r\n\r\n      <form className=\"sd-update-form\" onSubmit={updatesubmit}>\r\n        <label className=\"sd-label\" htmlFor=\"shopname\">Shop Name:</label>\r\n        <input\r\n          className=\"sd-input\"\r\n          type=\"text\"\r\n          name=\"shopname\"\r\n          id=\"shopname\"\r\n          placeholder=\"Shop Name\"\r\n          defaultValue={state.shopname}\r\n          required\r\n        />\r\n        <label className=\"sd-label\" htmlFor=\"address\">Address:</label>\r\n        <input\r\n          className=\"sd-input\"\r\n          type=\"text\"\r\n          name=\"address\"\r\n          id=\"address\"\r\n          placeholder=\"Address\"\r\n          defaultValue={state.address}\r\n          required\r\n        />\r\n        <button className=\"sd-button\" type=\"submit\">Update Shop Details</button>\r\n      </form>\r\n\r\n      <form className=\"sd-add-ground-form\" onSubmit={addGround}>\r\n        <h2 className=\"sd-subtitle\">Add Ground</h2>\r\n        <label className=\"sd-label\" htmlFor=\"selectsport\">Select a sport:</label>\r\n        <select className=\"sd-select\" name=\"selectsport\" id=\"select Sport\">\r\n          {sportlist.length>0 ?(\r\n            sportlist.map((sport) => (\r\n              <option key={sport.name} value={sport.name}>{sport.name}</option>\r\n              ))\r\n            ):(<p>No sports</p>)}\r\n        </select>\r\n        <label className=\"sd-label\" htmlFor=\"groundname\">Ground Name:</label>\r\n        <input className=\"sd-input\" type=\"text\" name=\"groundname\" id=\"groundname\" placeholder=\"Ground Name\" required />\r\n        <label className=\"sd-label\" htmlFor=\"priceperhour\">Price Per Hour:</label>\r\n        <input className=\"sd-input\" type=\"number\" name=\"priceperhour\" id=\"priceperhour\" placeholder=\"Price Per Hour\" required />\r\n\r\n        <label className=\"sd-label\" htmlFor=\"maxplayers\">Maximum Number of Players:</label>\r\n        <input className=\"sd-input\" type=\"number\" name=\"maxplayers\" id=\"maxplayers\" placeholder=\"Maximum Number Of Players\" required />\r\n\r\n        <label className=\"sd-label\" htmlFor=\"groundLength\">Ground Length (meters):</label>\r\n        <input className=\"sd-input\" type=\"number\" name=\"groundLength\" id=\"groundLength\" placeholder=\"Ground Length (meters)\" required />\r\n\r\n        <label className=\"sd-label\" htmlFor=\"groundwidth\">Ground Width (meters):</label>\r\n        <input className=\"sd-input\" type=\"number\" name=\"groundwidth\" id=\"groundwidth\" placeholder=\"Ground Width (meters)\" required />\r\n\r\n        <label className=\"sd-label\" htmlFor=\"facilities\">Facilities Available:</label>\r\n        <input className=\"sd-input\" type=\"text\" name=\"facilities\" id=\"facilities\" placeholder=\"Facilities Available\" required />\r\n        <label className=\"sd-label\" htmlFor=\"surfaceType\">Surface Type:</label>\r\n        <select className=\"sd-select\" name=\"surfaceType\" id=\"surfaceType\" required>\r\n          <option value=\"Grass\">Grass</option>\r\n          <option value=\"Turf\">Turf</option>\r\n          <option value=\"Clay\">Clay</option>\r\n          <option value=\"Hard\">Hard</option>\r\n          <option value=\"Synthetic\">Synthetic</option>\r\n        </select>\r\n\r\n        <label className=\"sd-label\" htmlFor=\"image\">Upload Ground Image:</label>\r\n        <input className=\"sd-input\" type=\"file\" name=\"image\" id=\"image\" accept=\"image/*\" required />\r\n\r\n        <label className=\"sd-label\" htmlFor=\"daysperweek\">Days Available Per Week:</label>\r\n        <input\r\n          className=\"sd-input\"\r\n          type=\"number\"\r\n          name=\"daysperweek\"\r\n          id=\"daysperweek\"\r\n          placeholder=\"Days Per Week\"\r\n          required\r\n          value={daysPerWeek}\r\n          onChange={handleDaysPerWeekChange}\r\n        />\r\n\r\n        {Array.from({ length: daysPerWeek }).map((_, index) => (\r\n          <div key={index} className=\"sd-day-container\">\r\n            <label className=\"sd-label\" htmlFor={`day-${index}`}>Day:</label>\r\n            <select\r\n              className=\"sd-select\"\r\n              name={`day-${index}`}\r\n              id={`day-${index}`}\r\n              value={daysArray[index] || ''}\r\n              onChange={(e) => handleDayChange(index, e.target.value)}\r\n              required\r\n            >\r\n              <option value=\"\" disabled>Select Day</option>\r\n              {generateDayOptions()}\r\n            </select>\r\n            <label className=\"sd-label\" htmlFor={`start-time-${index}`}>Start Time:</label>\r\n            <input\r\n              className=\"sd-input\"\r\n              type=\"time\"\r\n              name={`start-time-${index}`}\r\n              id={`start-time-${index}`}\r\n              value={timesArray[index]?.start || ''}\r\n              onChange={(e) => handleTimeChange(index, 'start', e.target.value)}\r\n              required\r\n            />\r\n            <label className=\"sd-label\" htmlFor={`end-time-${index}`}>End Time:</label>\r\n            <input\r\n              className=\"sd-input\"\r\n              type=\"time\"\r\n              name={`end-time-${index}`}\r\n              id={`end-time-${index}`}\r\n              value={timesArray[index]?.end || ''}\r\n              onChange={(e) => handleTimeChange(index, 'end', e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n        ))}\r\n\r\n        <button className=\"sd-button\" type=\"submit\">Add Ground</button>\r\n      </form>\r\n      <div className=\"sd-pie-chart\">\r\n        <h1>Shop's Revenue</h1>\r\n        <Pie data={chartData} />\r\n      </div>\r\n\r\n      <ul className=\"sd-grounds-list\">\r\n        {grounds.map((ground, index) => (\r\n          <li key={index} className=\"sd-ground-item\">\r\n            <h3>{ground.groundname}</h3>\r\n            <p>Price Per Hour: {ground.priceperhour}</p>\r\n            <p>Max Players: {ground.maxplayers}</p>\r\n            <p>Ground Dimensions: {ground.grounddimensions.length} x {ground.grounddimensions.width} meters</p>\r\n            <p>Facilities: {ground.facilities.join(', ')}</p>\r\n            <p>Surface Type: {ground.surfacetype}</p>\r\n            <img\r\n              src={ground.getimage || ground.image||'default-image-path.jpg'} \r\n              alt={ground.groundname}\r\n              className=\"sd-ground-image\"\r\n            />\r\n            <p>Status: {ground.status}</p>\r\n            <p>Verification: {ground.verify ? 'Verified' : 'Not Verified'}</p>\r\n            <p>Applied For Verification: {ground.appliedforverification ? 'Applied' : 'Not Applied'}</p>\r\n            {!ground.verify && !ground.appliedforverification && (\r\n              <button onClick={() => applyingforverification(ground.groundname)}>\r\n                Apply for Verification\r\n              </button>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShopDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}