name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  NODE_ENV: production

jobs:
  frontend:
    name: Frontend - React App Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: my-react-app

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: my-react-app/node_modules
          key: ${{ runner.os }}-frontend-node-modules-${{ hashFiles('my-react-app/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-node-modules-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Build frontend
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: my-react-app/build
          retention-days: 1

  backend:
    name: Backend - Node.js Express App Build
    runs-on: ubuntu-latest
    needs: frontend
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-node-modules-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-node-modules-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Verify server starts
        run: |
          npm run start &
          sleep 10
          curl http://localhost:3000 || exit 1