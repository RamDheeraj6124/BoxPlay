name: Backend - Node.js Express App Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend:
    name: Backend - Node.js Express App Build
    runs-on: ubuntu-latest
    needs: frontend
    defaults:
      run:
        working-directory: backend

    env:
      NODE_ENV: test
      MONGO_URL: mongodb://localhost:27017/testdb
      # Add other required environment variables here

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-node-modules-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-node-modules-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Debug Test Files
        run: ls -R backend/__tests__

      - name: Start MongoDB Memory Server
        run: |
          mkdir -p /tmp/mongodb
          nohup mongod --dbpath /tmp/mongodb --port 27017 > /dev/null 2>&1 &
          sleep 5

      - name: Debug MongoDB Startup
        run: ps aux | grep mongod

      - name: Run Jest tests
        run: npm test -- --detectOpenHandles --forceExit --coverage
        working-directory: backend
        env:
          JEST_JUNIT_OUTPUT: test-results/jest/results.xml

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: jest-test-results
          path: |
            backend/coverage
            backend/test-results

      - name: Verify server starts
        run: |
          npm run start &
          sleep 10
          curl -f http://localhost:${{ env.PORT }}/health-check || exit 1