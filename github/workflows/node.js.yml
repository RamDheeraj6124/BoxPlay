name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Backend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    services:
      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

      mongodb:
        image: mongo:5.0
        ports:
          - 27017:27017
        options: --health-cmd "mongo --eval 'db.runCommand(\"ping\").ok'" --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      NODE_ENV: test
      MONGO_URL: mongodb://localhost:27017/testdb
      REDIS_URL: redis://localhost:6379
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Wait for MongoDB
        run: sleep 10 # Give MongoDB time to initialize

      - name: Run tests
        run: npm test -- --ci --forceExit --detectOpenHandles --coverage --testPathPattern=__tests__
        env:
          CI: true

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: |
            backend/coverage
            backend/test-results

      - name: Verify server health
        run: |
          npm run start &
          sleep 10
          curl -f http://localhost:${{ env.PORT || 3000 }}/health-check || exit 1